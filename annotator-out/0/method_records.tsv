id	class	method	parent	flags	annotations	visibility	non-primitive-return	path
1	com.sun.jersey.client.apache4.ApacheHttpClient4	addFilter(com.netflix.discovery.EurekaIdentityHeaderFilter)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/sun/jersey/client/apache4/ApacheHttpClient4.java
2	com.netflix.eureka.EurekaServerContext	initialize()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContext.java
3	com.netflix.eureka.EurekaServerContext	shutdown()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContext.java
4	com.netflix.eureka.EurekaServerContext	getServerConfig()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContext.java
5	com.netflix.eureka.EurekaServerContext	getPeerEurekaNodes()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContext.java
6	com.netflix.eureka.EurekaServerContext	getServerCodecs()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContext.java
7	com.netflix.eureka.EurekaServerContext	getRegistry()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContext.java
8	com.netflix.eureka.EurekaServerContext	getApplicationInfoManager()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContext.java
9	com.netflix.eureka.EurekaServerConfig	getAWSAccessId()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
10	com.netflix.eureka.EurekaServerConfig	getAWSSecretKey()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
11	com.netflix.eureka.EurekaServerConfig	getEIPBindRebindRetries()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
12	com.netflix.eureka.EurekaServerConfig	getEIPBindingRetryIntervalMsWhenUnbound()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
13	com.netflix.eureka.EurekaServerConfig	getEIPBindingRetryIntervalMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
14	com.netflix.eureka.EurekaServerConfig	shouldEnableSelfPreservation()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
15	com.netflix.eureka.EurekaServerConfig	getRenewalPercentThreshold()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
16	com.netflix.eureka.EurekaServerConfig	getRenewalThresholdUpdateIntervalMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
17	com.netflix.eureka.EurekaServerConfig	getExpectedClientRenewalIntervalSeconds()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
18	com.netflix.eureka.EurekaServerConfig	getPeerEurekaNodesUpdateIntervalMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
19	com.netflix.eureka.EurekaServerConfig	shouldEnableReplicatedRequestCompression()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
20	com.netflix.eureka.EurekaServerConfig	getNumberOfReplicationRetries()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
21	com.netflix.eureka.EurekaServerConfig	getPeerEurekaStatusRefreshTimeIntervalMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
22	com.netflix.eureka.EurekaServerConfig	getWaitTimeInMsWhenSyncEmpty()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
23	com.netflix.eureka.EurekaServerConfig	getPeerNodeConnectTimeoutMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
24	com.netflix.eureka.EurekaServerConfig	getPeerNodeReadTimeoutMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
25	com.netflix.eureka.EurekaServerConfig	getPeerNodeTotalConnections()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
26	com.netflix.eureka.EurekaServerConfig	getPeerNodeTotalConnectionsPerHost()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
27	com.netflix.eureka.EurekaServerConfig	getPeerNodeConnectionIdleTimeoutSeconds()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
28	com.netflix.eureka.EurekaServerConfig	getRetentionTimeInMSInDeltaQueue()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
29	com.netflix.eureka.EurekaServerConfig	getDeltaRetentionTimerIntervalInMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
30	com.netflix.eureka.EurekaServerConfig	getEvictionIntervalTimerInMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
31	com.netflix.eureka.EurekaServerConfig	shouldUseAwsAsgApi()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
32	com.netflix.eureka.EurekaServerConfig	getASGQueryTimeoutMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
33	com.netflix.eureka.EurekaServerConfig	getASGUpdateIntervalMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
34	com.netflix.eureka.EurekaServerConfig	getASGCacheExpiryTimeoutMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
35	com.netflix.eureka.EurekaServerConfig	getResponseCacheAutoExpirationInSeconds()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
36	com.netflix.eureka.EurekaServerConfig	getResponseCacheUpdateIntervalMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
37	com.netflix.eureka.EurekaServerConfig	shouldUseReadOnlyResponseCache()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
38	com.netflix.eureka.EurekaServerConfig	shouldDisableDelta()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
39	com.netflix.eureka.EurekaServerConfig	getMaxIdleThreadInMinutesAgeForStatusReplication()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
40	com.netflix.eureka.EurekaServerConfig	getMinThreadsForStatusReplication()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
41	com.netflix.eureka.EurekaServerConfig	getMaxThreadsForStatusReplication()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
42	com.netflix.eureka.EurekaServerConfig	getMaxElementsInStatusReplicationPool()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
43	com.netflix.eureka.EurekaServerConfig	shouldSyncWhenTimestampDiffers()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
44	com.netflix.eureka.EurekaServerConfig	getRegistrySyncRetries()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
45	com.netflix.eureka.EurekaServerConfig	getRegistrySyncRetryWaitMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
46	com.netflix.eureka.EurekaServerConfig	getMaxElementsInPeerReplicationPool()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
47	com.netflix.eureka.EurekaServerConfig	getMaxIdleThreadAgeInMinutesForPeerReplication()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
48	com.netflix.eureka.EurekaServerConfig	getMinThreadsForPeerReplication()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
49	com.netflix.eureka.EurekaServerConfig	getMaxThreadsForPeerReplication()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
50	com.netflix.eureka.EurekaServerConfig	getHealthStatusMinNumberOfAvailablePeers()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
51	com.netflix.eureka.EurekaServerConfig	getMaxTimeForReplication()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
52	com.netflix.eureka.EurekaServerConfig	shouldPrimeAwsReplicaConnections()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
53	com.netflix.eureka.EurekaServerConfig	shouldDisableDeltaForRemoteRegions()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
54	com.netflix.eureka.EurekaServerConfig	getRemoteRegionConnectTimeoutMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
55	com.netflix.eureka.EurekaServerConfig	getRemoteRegionReadTimeoutMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
56	com.netflix.eureka.EurekaServerConfig	getRemoteRegionTotalConnections()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
57	com.netflix.eureka.EurekaServerConfig	getRemoteRegionTotalConnectionsPerHost()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
58	com.netflix.eureka.EurekaServerConfig	getRemoteRegionConnectionIdleTimeoutSeconds()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
59	com.netflix.eureka.EurekaServerConfig	shouldGZipContentFromRemoteRegion()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
60	com.netflix.eureka.EurekaServerConfig	getRemoteRegionUrlsWithName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
61	com.netflix.eureka.EurekaServerConfig	getRemoteRegionUrls()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
62	com.netflix.eureka.EurekaServerConfig	getRemoteRegionAppWhitelist(java.lang.String)	0	[true]	javax.annotation.Nullable	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
63	com.netflix.eureka.EurekaServerConfig	getRemoteRegionRegistryFetchInterval()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
64	com.netflix.eureka.EurekaServerConfig	getRemoteRegionFetchThreadPoolSize()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
65	com.netflix.eureka.EurekaServerConfig	getRemoteRegionTrustStore()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
66	com.netflix.eureka.EurekaServerConfig	getRemoteRegionTrustStorePassword()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
67	com.netflix.eureka.EurekaServerConfig	disableTransparentFallbackToOtherRegion()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
68	com.netflix.eureka.EurekaServerConfig	shouldBatchReplication()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
69	com.netflix.eureka.EurekaServerConfig	getMyUrl()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
70	com.netflix.eureka.EurekaServerConfig	shouldLogIdentityHeaders()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
71	com.netflix.eureka.EurekaServerConfig	isRateLimiterEnabled()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
72	com.netflix.eureka.EurekaServerConfig	isRateLimiterThrottleStandardClients()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
73	com.netflix.eureka.EurekaServerConfig	getRateLimiterPrivilegedClients()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
74	com.netflix.eureka.EurekaServerConfig	getRateLimiterBurstSize()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
75	com.netflix.eureka.EurekaServerConfig	getRateLimiterRegistryFetchAverageRate()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
76	com.netflix.eureka.EurekaServerConfig	getRateLimiterFullFetchAverageRate()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
77	com.netflix.eureka.EurekaServerConfig	getListAutoScalingGroupsRoleName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
78	com.netflix.eureka.EurekaServerConfig	getJsonCodecName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
79	com.netflix.eureka.EurekaServerConfig	getXmlCodecName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
80	com.netflix.eureka.EurekaServerConfig	getBindingStrategy()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
81	com.netflix.eureka.EurekaServerConfig	getRoute53DomainTTL()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
82	com.netflix.eureka.EurekaServerConfig	getRoute53BindRebindRetries()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
83	com.netflix.eureka.EurekaServerConfig	getRoute53BindingRetryIntervalMs()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
84	com.netflix.eureka.EurekaServerConfig	getExperimental(java.lang.String)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
85	com.netflix.eureka.EurekaServerConfig	getInitialCapacityOfResponseCache()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
86	com.netflix.eureka.cluster.PeerEurekaNodes	PeerEurekaNodes(com.netflix.eureka.registry.PeerAwareInstanceRegistry,com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.resources.ServerCodecs,com.netflix.appinfo.ApplicationInfoManager)	0	[false, false, false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
87	com.netflix.eureka.cluster.PeerEurekaNodes	getPeerNodesView()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
88	com.netflix.eureka.cluster.PeerEurekaNodes	getPeerEurekaNodes()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
89	com.netflix.eureka.cluster.PeerEurekaNodes	getMinNumberOfAvailablePeers()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
90	com.netflix.eureka.cluster.PeerEurekaNodes	start()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
91	com.netflix.eureka.cluster.PeerEurekaNodes$1	newThread(java.lang.Runnable)	92	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
93	com.netflix.eureka.cluster.PeerEurekaNodes$2	run()	94	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
95	com.netflix.eureka.cluster.PeerEurekaNodes	shutdown()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
96	com.netflix.eureka.cluster.PeerEurekaNodes	resolvePeerUrls()	0	[]		protected	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
97	com.netflix.eureka.cluster.PeerEurekaNodes	updatePeerEurekaNodes(java.util.List)	0	[false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
98	com.netflix.eureka.cluster.PeerEurekaNodes	createPeerEurekaNode(java.lang.String)	0	[false]		protected	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
99	com.netflix.eureka.cluster.PeerEurekaNodes	isThisMe(java.lang.String)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
100	com.netflix.eureka.cluster.PeerEurekaNodes	isThisMyUrl(java.lang.String)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
101	com.netflix.eureka.cluster.PeerEurekaNodes	isInstanceURL(java.lang.String,com.netflix.appinfo.InstanceInfo)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
102	com.netflix.eureka.cluster.PeerEurekaNodes	hostFromUrl(java.lang.String)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNodes.java
103	com.netflix.eureka.resources.ServerCodecs	getFullJsonCodec()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ServerCodecs.java
104	com.netflix.eureka.resources.ServerCodecs	getCompactJsonCodec()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ServerCodecs.java
105	com.netflix.eureka.resources.ServerCodecs	getFullXmlCodec()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ServerCodecs.java
106	com.netflix.eureka.resources.ServerCodecs	getCompactXmlCodecr()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ServerCodecs.java
107	com.netflix.eureka.resources.ServerCodecs	getEncoder(com.netflix.eureka.registry.Key.KeyType,boolean)	0	[false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ServerCodecs.java
108	com.netflix.eureka.resources.ServerCodecs	getEncoder(com.netflix.eureka.registry.Key.KeyType,com.netflix.appinfo.EurekaAccept)	0	[false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ServerCodecs.java
109	com.netflix.eureka.registry.PeerAwareInstanceRegistry	init(com.netflix.eureka.cluster.PeerEurekaNodes)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistry.java
110	com.netflix.eureka.registry.PeerAwareInstanceRegistry	syncUp()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistry.java
111	com.netflix.eureka.registry.PeerAwareInstanceRegistry	shouldAllowAccess(boolean)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistry.java
112	com.netflix.eureka.registry.PeerAwareInstanceRegistry	register(com.netflix.appinfo.InstanceInfo,boolean)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistry.java
113	com.netflix.eureka.registry.PeerAwareInstanceRegistry	statusUpdate(java.lang.String,com.netflix.eureka.resources.ASGResource.ASGStatus,boolean)	0	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistry.java
114	com.netflix.eureka.registry.InstanceRegistry	openForTraffic(com.netflix.appinfo.ApplicationInfoManager,int)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
115	com.netflix.eureka.registry.InstanceRegistry	shutdown()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
116	com.netflix.eureka.registry.InstanceRegistry	storeOverriddenStatusIfRequired(java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus)	0	[false, false]	java.lang.Deprecated	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
117	com.netflix.eureka.registry.InstanceRegistry	storeOverriddenStatusIfRequired(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus)	0	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
118	com.netflix.eureka.registry.InstanceRegistry	statusUpdate(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus,java.lang.String,boolean)	0	[false, false, false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
119	com.netflix.eureka.registry.InstanceRegistry	deleteStatusOverride(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus,java.lang.String,boolean)	0	[false, false, false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
120	com.netflix.eureka.registry.InstanceRegistry	overriddenInstanceStatusesSnapshot()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
121	com.netflix.eureka.registry.InstanceRegistry	getApplicationsFromLocalRegionOnly()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
122	com.netflix.eureka.registry.InstanceRegistry	getSortedApplications()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
123	com.netflix.eureka.registry.InstanceRegistry	getApplication(java.lang.String,boolean)	0	[false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
124	com.netflix.eureka.registry.InstanceRegistry	getInstanceByAppAndId(java.lang.String,java.lang.String)	0	[false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
125	com.netflix.eureka.registry.InstanceRegistry	getInstanceByAppAndId(java.lang.String,java.lang.String,boolean)	0	[false, false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
126	com.netflix.eureka.registry.InstanceRegistry	clearRegistry()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
127	com.netflix.eureka.registry.InstanceRegistry	initializedResponseCache()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
128	com.netflix.eureka.registry.InstanceRegistry	getResponseCache()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
129	com.netflix.eureka.registry.InstanceRegistry	getNumOfRenewsInLastMin()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
130	com.netflix.eureka.registry.InstanceRegistry	getNumOfRenewsPerMinThreshold()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
131	com.netflix.eureka.registry.InstanceRegistry	isBelowRenewThresold()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
132	com.netflix.eureka.registry.InstanceRegistry	getLastNRegisteredInstances()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
133	com.netflix.eureka.registry.InstanceRegistry	getLastNCanceledInstances()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
134	com.netflix.eureka.registry.InstanceRegistry	isLeaseExpirationEnabled()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
135	com.netflix.eureka.registry.InstanceRegistry	isSelfPreservationModeEnabled()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/InstanceRegistry.java
136	com.netflix.eureka.lease.LeaseManager	register(T,int,boolean)	0	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/LeaseManager.java
137	com.netflix.eureka.lease.LeaseManager	cancel(java.lang.String,java.lang.String,boolean)	0	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/LeaseManager.java
138	com.netflix.eureka.lease.LeaseManager	renew(java.lang.String,java.lang.String,boolean)	0	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/LeaseManager.java
139	com.netflix.eureka.lease.LeaseManager	evict()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/LeaseManager.java
140	com.netflix.eureka.resources.ASGResource$ASGStatus	toEnum(java.lang.String)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ASGResource.java
141	com.netflix.eureka.resources.ASGResource	ASGResource(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ASGResource.java
142	com.netflix.eureka.resources.ASGResource	ASGResource()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ASGResource.java
143	com.netflix.eureka.resources.ASGResource	statusUpdate(java.lang.String,java.lang.String,java.lang.String)	0	[false, false, false]	javax.ws.rs.PUT,javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ASGResource.java
144	com.netflix.eureka.aws.AwsAsgUtil$1	newThread(java.lang.Runnable)	92	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
145	com.netflix.eureka.aws.AwsAsgUtil	AwsAsgUtil(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.registry.InstanceRegistry)	0	[false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
146	com.netflix.eureka.aws.AwsAsgUtil$2	load(com.netflix.eureka.aws.AwsAsgUtil.CacheKey)	147	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
148	com.netflix.eureka.aws.AwsAsgUtil$2	reload(com.netflix.eureka.aws.AwsAsgUtil.CacheKey,java.lang.Boolean)	149	[false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
150	com.netflix.eureka.aws.AwsAsgUtil$2$1	call()	151	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
152	com.netflix.eureka.aws.AwsAsgUtil	isASGEnabled(com.netflix.appinfo.InstanceInfo)	153	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
154	com.netflix.eureka.aws.AwsAsgUtil	setStatus(java.lang.String,boolean)	155	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
156	com.netflix.eureka.aws.AwsAsgUtil	isAddToLoadBalancerSuspended(java.lang.String,java.lang.String)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
157	com.netflix.eureka.aws.AwsAsgUtil	isAddToLoadBalancerSuspended(com.amazonaws.services.autoscaling.model.AutoScalingGroup)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
158	com.netflix.eureka.aws.AwsAsgUtil	retrieveAutoScalingGroup(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
159	com.netflix.eureka.aws.AwsAsgUtil	initializeStsSession(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
160	com.netflix.eureka.aws.AwsAsgUtil	retrieveAutoScalingGroupCrossAccount(java.lang.String,java.lang.String)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
161	com.netflix.eureka.aws.AwsAsgUtil	isASGEnabledinAWS(java.lang.String,java.lang.String)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
162	com.netflix.eureka.aws.AwsAsgUtil	getNumberofElementsinASGCache()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
163	com.netflix.eureka.aws.AwsAsgUtil	getNumberofASGQueries()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
164	com.netflix.eureka.aws.AwsAsgUtil	getNumberofASGQueryFailures()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
165	com.netflix.eureka.aws.AwsAsgUtil	getASGUpdateTask()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
166	com.netflix.eureka.aws.AwsAsgUtil$3	run()	167	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
168	com.netflix.eureka.aws.AwsAsgUtil	getCacheKeys()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
169	com.netflix.eureka.aws.AwsAsgUtil	getASGAccount(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
170	com.netflix.eureka.aws.AwsAsgUtil	getAccountId(com.netflix.appinfo.InstanceInfo,java.lang.String)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
171	com.netflix.eureka.aws.AwsAsgUtil	getAmazonAutoScalingClient()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
172	com.netflix.eureka.aws.AwsAsgUtil	getAccountId()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
173	com.netflix.eureka.aws.AwsAsgUtil$CacheKey	CacheKey(java.lang.String,java.lang.String)	0	[false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
174	com.netflix.eureka.aws.AwsAsgUtil$CacheKey	toString()	175	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
176	com.netflix.eureka.aws.AwsAsgUtil$CacheKey	equals(java.lang.Object)	177	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
178	com.netflix.eureka.aws.AwsAsgUtil$CacheKey	hashCode()	179	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsAsgUtil.java
153	com.netflix.eureka.aws.AsgClient	isASGEnabled(com.netflix.appinfo.InstanceInfo)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AsgClient.java
155	com.netflix.eureka.aws.AsgClient	setStatus(java.lang.String,boolean)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AsgClient.java
180	com.netflix.eureka.registry.ResponseCache	invalidate(java.lang.String,java.lang.String,java.lang.String)	0	[false, true, true]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCache.java
181	com.netflix.eureka.registry.ResponseCache	getVersionDelta()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCache.java
182	com.netflix.eureka.registry.ResponseCache	getVersionDeltaWithRegions()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCache.java
183	com.netflix.eureka.registry.ResponseCache	get(com.netflix.eureka.registry.Key)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCache.java
184	com.netflix.eureka.registry.ResponseCache	getGZIP(com.netflix.eureka.registry.Key)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCache.java
185	com.netflix.eureka.registry.ResponseCache	stop()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCache.java
186	com.netflix.eureka.registry.Key	Key(com.netflix.eureka.registry.Key.EntityType,java.lang.String,com.netflix.eureka.registry.Key.KeyType,com.netflix.eureka.Version,com.netflix.appinfo.EurekaAccept)	0	[false, false, false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
187	com.netflix.eureka.registry.Key	Key(com.netflix.eureka.registry.Key.EntityType,java.lang.String,com.netflix.eureka.registry.Key.KeyType,com.netflix.eureka.Version,com.netflix.appinfo.EurekaAccept,java.lang.String[])	0	[false, false, false, false, false, true]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
188	com.netflix.eureka.registry.Key	getName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
189	com.netflix.eureka.registry.Key	getHashKey()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
190	com.netflix.eureka.registry.Key	getType()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
191	com.netflix.eureka.registry.Key	getVersion()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
192	com.netflix.eureka.registry.Key	getEurekaAccept()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
193	com.netflix.eureka.registry.Key	getEntityType()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
194	com.netflix.eureka.registry.Key	hasRegions()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
195	com.netflix.eureka.registry.Key	getRegions()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
196	com.netflix.eureka.registry.Key	cloneWithoutRegions()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
197	com.netflix.eureka.registry.Key	hashCode()	179	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
198	com.netflix.eureka.registry.Key	equals(java.lang.Object)	177	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
199	com.netflix.eureka.registry.Key	toStringCompact()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/Key.java
200	com.netflix.eureka.Version	toEnum(java.lang.String)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/Version.java
201	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl$Action	getTimer()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
202	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl$1	compare(com.netflix.discovery.shared.Application,com.netflix.discovery.shared.Application)	203	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
204	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	PeerAwareInstanceRegistryImpl(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.resources.ServerCodecs,com.netflix.discovery.EurekaClient)	0	[false, false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
205	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	getInstanceInfoOverrideRule()	206	[]	java.lang.Override	protected	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
207	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	init(com.netflix.eureka.cluster.PeerEurekaNodes)	109	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
208	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	shutdown()	209	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
210	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	scheduleRenewalThresholdUpdateTask()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
211	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl$2	run()	167	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
212	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	syncUp()	110	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
213	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	openForTraffic(com.netflix.appinfo.ApplicationInfoManager,int)	114	[false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
214	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	primeAwsReplicas(com.netflix.appinfo.ApplicationInfoManager)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
215	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	shouldAllowAccess(boolean)	111	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
216	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	shouldAllowAccess()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
217	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	shouldAllowAccessMetric()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
218	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	getReplicaNodes()	0	[]	java.lang.Deprecated	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
219	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	cancel(java.lang.String,java.lang.String,boolean)	220	[false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
221	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	register(com.netflix.appinfo.InstanceInfo,boolean)	112	[false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
222	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	renew(java.lang.String,java.lang.String,boolean)	223	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
224	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	statusUpdate(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus,java.lang.String,boolean)	225	[false, false, false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
226	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	deleteStatusOverride(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus,java.lang.String,boolean)	227	[false, false, false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
228	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	statusUpdate(java.lang.String,com.netflix.eureka.resources.ASGResource.ASGStatus,boolean)	113	[false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
229	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	isLeaseExpirationEnabled()	134	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
230	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	isLeaseExpirationEnabledMetric()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
231	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	isSelfPreservationModeEnabled()	135	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
232	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	isSelfPreservationModeEnabledMetric()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
233	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	getNextServerFromEureka(java.lang.String,boolean)	234	[false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
235	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	updateRenewalThreshold()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
236	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	getSortedApplications()	122	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
237	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	getNumOfReplicationsInLastMin()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
238	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	isBelowRenewThresold()	131	[]	com.netflix.servo.annotations.Monitor,java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
239	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	isRegisterable(com.netflix.appinfo.InstanceInfo)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
240	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	replicateToPeers(com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.Action,java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo,com.netflix.appinfo.InstanceInfo.InstanceStatus,boolean)	0	[false, false, false, false, false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
241	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	replicateInstanceActionsToPeers(com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.Action,java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo,com.netflix.appinfo.InstanceInfo.InstanceStatus,com.netflix.eureka.cluster.PeerEurekaNode)	0	[false, false, false, false, false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
242	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	replicateASGInfoToReplicaNodes(java.lang.String,com.netflix.eureka.resources.ASGResource.ASGStatus,com.netflix.eureka.cluster.PeerEurekaNode)	0	[false, false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
243	com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl	getLocalRegistrySize()	244	[]	java.lang.Override,com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java
245	com.netflix.eureka.cluster.PeerEurekaNode	PeerEurekaNode(com.netflix.eureka.registry.PeerAwareInstanceRegistry,java.lang.String,java.lang.String,com.netflix.eureka.cluster.HttpReplicationClient,com.netflix.eureka.EurekaServerConfig)	0	[false, false, false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
246	com.netflix.eureka.cluster.PeerEurekaNode	PeerEurekaNode(com.netflix.eureka.registry.PeerAwareInstanceRegistry,java.lang.String,java.lang.String,com.netflix.eureka.cluster.HttpReplicationClient,com.netflix.eureka.EurekaServerConfig,int,long,long,long)	0	[false, false, false, false, false, false, false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
247	com.netflix.eureka.cluster.PeerEurekaNode	register(com.netflix.appinfo.InstanceInfo)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
248	com.netflix.eureka.cluster.PeerEurekaNode$1	execute()	249	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
250	com.netflix.eureka.cluster.PeerEurekaNode	cancel(java.lang.String,java.lang.String)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
251	com.netflix.eureka.cluster.PeerEurekaNode$2	execute()	249	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
252	com.netflix.eureka.cluster.PeerEurekaNode$2	handleFailure(int,java.lang.Object)	253	[false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
254	com.netflix.eureka.cluster.PeerEurekaNode	heartbeat(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo,com.netflix.appinfo.InstanceInfo.InstanceStatus,boolean)	0	[false, false, false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
255	com.netflix.eureka.cluster.PeerEurekaNode$3	execute()	249	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
256	com.netflix.eureka.cluster.PeerEurekaNode$3	handleFailure(int,java.lang.Object)	253	[false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
257	com.netflix.eureka.cluster.PeerEurekaNode	statusUpdate(java.lang.String,com.netflix.eureka.resources.ASGResource.ASGStatus)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
258	com.netflix.eureka.cluster.PeerEurekaNode$4	execute()	249	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
259	com.netflix.eureka.cluster.PeerEurekaNode	statusUpdate(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus,com.netflix.appinfo.InstanceInfo)	0	[false, false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
260	com.netflix.eureka.cluster.PeerEurekaNode$5	execute()	249	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
261	com.netflix.eureka.cluster.PeerEurekaNode	deleteStatusOverride(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo)	0	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
262	com.netflix.eureka.cluster.PeerEurekaNode$6	execute()	249	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
263	com.netflix.eureka.cluster.PeerEurekaNode	getServiceUrl()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
264	com.netflix.eureka.cluster.PeerEurekaNode	hashCode()	179	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
265	com.netflix.eureka.cluster.PeerEurekaNode	equals(java.lang.Object)	177	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
266	com.netflix.eureka.cluster.PeerEurekaNode	shutDown()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
267	com.netflix.eureka.cluster.PeerEurekaNode	syncInstancesIfTimestampDiffers(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo,com.netflix.appinfo.InstanceInfo)	0	[false, false, false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
268	com.netflix.eureka.cluster.PeerEurekaNode	getBatcherName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
269	com.netflix.eureka.cluster.PeerEurekaNode	taskId(java.lang.String,java.lang.String,java.lang.String)	0	[false, false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
270	com.netflix.eureka.cluster.PeerEurekaNode	taskId(java.lang.String,com.netflix.appinfo.InstanceInfo)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
271	com.netflix.eureka.cluster.PeerEurekaNode	getLeaseRenewalOf(com.netflix.appinfo.InstanceInfo)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java
272	com.netflix.eureka.util.EurekaMonitors	EurekaMonitors(java.lang.String,java.lang.String)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
273	com.netflix.eureka.util.EurekaMonitors	increment()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
274	com.netflix.eureka.util.EurekaMonitors	increment(boolean)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
275	com.netflix.eureka.util.EurekaMonitors	getName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
276	com.netflix.eureka.util.EurekaMonitors	getZoneSpecificName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
277	com.netflix.eureka.util.EurekaMonitors	getDescription()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
278	com.netflix.eureka.util.EurekaMonitors	getCount()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
279	com.netflix.eureka.util.EurekaMonitors	getZoneSpecificCount()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
280	com.netflix.eureka.util.EurekaMonitors	registerAllStats()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
281	com.netflix.eureka.util.EurekaMonitors	shutdown()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/EurekaMonitors.java
282	com.netflix.eureka.registry.AbstractInstanceRegistry	AbstractInstanceRegistry(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.resources.ServerCodecs)	0	[false, false, false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
283	com.netflix.eureka.registry.AbstractInstanceRegistry	initializedResponseCache()	127	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
284	com.netflix.eureka.registry.AbstractInstanceRegistry	initRemoteRegionRegistry()	0	[]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
285	com.netflix.eureka.registry.AbstractInstanceRegistry	getResponseCache()	128	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
244	com.netflix.eureka.registry.AbstractInstanceRegistry	getLocalRegistrySize()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
286	com.netflix.eureka.registry.AbstractInstanceRegistry	clearRegistry()	126	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
287	com.netflix.eureka.registry.AbstractInstanceRegistry	overriddenInstanceStatusesSnapshot()	120	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
288	com.netflix.eureka.registry.AbstractInstanceRegistry	register(com.netflix.appinfo.InstanceInfo,int,boolean)	136	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
220	com.netflix.eureka.registry.AbstractInstanceRegistry	cancel(java.lang.String,java.lang.String,boolean)	137	[false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
289	com.netflix.eureka.registry.AbstractInstanceRegistry	internalCancel(java.lang.String,java.lang.String,boolean)	0	[false, false, false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
223	com.netflix.eureka.registry.AbstractInstanceRegistry	renew(java.lang.String,java.lang.String,boolean)	138	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
290	com.netflix.eureka.registry.AbstractInstanceRegistry	storeOverriddenStatusIfRequired(java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus)	116	[false, false]	java.lang.Deprecated,java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
291	com.netflix.eureka.registry.AbstractInstanceRegistry	storeOverriddenStatusIfRequired(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus)	117	[false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
225	com.netflix.eureka.registry.AbstractInstanceRegistry	statusUpdate(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus,java.lang.String,boolean)	118	[false, false, false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
227	com.netflix.eureka.registry.AbstractInstanceRegistry	deleteStatusOverride(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo.InstanceStatus,java.lang.String,boolean)	119	[false, false, false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
292	com.netflix.eureka.registry.AbstractInstanceRegistry	evict()	139	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
293	com.netflix.eureka.registry.AbstractInstanceRegistry	evict(long)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
294	com.netflix.eureka.registry.AbstractInstanceRegistry	getApplication(java.lang.String)	295	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
296	com.netflix.eureka.registry.AbstractInstanceRegistry	getApplication(java.lang.String,boolean)	123	[false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
297	com.netflix.eureka.registry.AbstractInstanceRegistry	getApplications()	298	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
299	com.netflix.eureka.registry.AbstractInstanceRegistry	getApplicationsFromAllRemoteRegions()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
300	com.netflix.eureka.registry.AbstractInstanceRegistry	getApplicationsFromLocalRegionOnly()	121	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
301	com.netflix.eureka.registry.AbstractInstanceRegistry	getApplicationsFromMultipleRegions(java.lang.String[])	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
302	com.netflix.eureka.registry.AbstractInstanceRegistry	shouldFetchFromRemoteRegistry(java.lang.String,java.lang.String)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
303	com.netflix.eureka.registry.AbstractInstanceRegistry	getApplications(boolean)	0	[false]	java.lang.Deprecated	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
304	com.netflix.eureka.registry.AbstractInstanceRegistry	getApplicationDeltas()	0	[]	java.lang.Deprecated	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
305	com.netflix.eureka.registry.AbstractInstanceRegistry	getApplicationDeltasFromMultipleRegions(java.lang.String[])	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
306	com.netflix.eureka.registry.AbstractInstanceRegistry	getInstanceByAppAndId(java.lang.String,java.lang.String)	124	[false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
307	com.netflix.eureka.registry.AbstractInstanceRegistry	getInstanceByAppAndId(java.lang.String,java.lang.String,boolean)	125	[false, false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
308	com.netflix.eureka.registry.AbstractInstanceRegistry	getInstancesById(java.lang.String)	309	[false]	java.lang.Deprecated	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
310	com.netflix.eureka.registry.AbstractInstanceRegistry	getInstancesById(java.lang.String,boolean)	0	[false, false]	java.lang.Deprecated	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
311	com.netflix.eureka.registry.AbstractInstanceRegistry	decorateInstanceInfo(com.netflix.eureka.lease.Lease)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
312	com.netflix.eureka.registry.AbstractInstanceRegistry	getNumOfRenewsInLastMin()	129	[]	com.netflix.servo.annotations.Monitor,java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
313	com.netflix.eureka.registry.AbstractInstanceRegistry	getNumOfRenewsPerMinThreshold()	130	[]	com.netflix.servo.annotations.Monitor,java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
314	com.netflix.eureka.registry.AbstractInstanceRegistry	getLastNRegisteredInstances()	132	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
315	com.netflix.eureka.registry.AbstractInstanceRegistry	getLastNCanceledInstances()	133	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
316	com.netflix.eureka.registry.AbstractInstanceRegistry	invalidateCache(java.lang.String,java.lang.String,java.lang.String)	0	[false, true, true]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
317	com.netflix.eureka.registry.AbstractInstanceRegistry	updateRenewsPerMinThreshold()	0	[]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
318	com.netflix.eureka.registry.AbstractInstanceRegistry$RecentlyChangedItem	RecentlyChangedItem(com.netflix.eureka.lease.Lease)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
319	com.netflix.eureka.registry.AbstractInstanceRegistry$RecentlyChangedItem	getLastUpdateTime()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
320	com.netflix.eureka.registry.AbstractInstanceRegistry$RecentlyChangedItem	getLeaseInfo()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
321	com.netflix.eureka.registry.AbstractInstanceRegistry	postInit()	0	[]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
209	com.netflix.eureka.registry.AbstractInstanceRegistry	shutdown()	115	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
322	com.netflix.eureka.registry.AbstractInstanceRegistry	getNumberofElementsininstanceCache()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
323	com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask	run()	167	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
324	com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask	getCompensationTimeMs()	0	[]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
325	com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask	getCurrentTimeNano()	0	[]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
326	com.netflix.eureka.registry.AbstractInstanceRegistry$CircularQueue	CircularQueue(int)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
327	com.netflix.eureka.registry.AbstractInstanceRegistry$CircularQueue	iterator()	328	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
329	com.netflix.eureka.registry.AbstractInstanceRegistry$CircularQueue	size()	330	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
331	com.netflix.eureka.registry.AbstractInstanceRegistry$CircularQueue	offer(E)	332	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
333	com.netflix.eureka.registry.AbstractInstanceRegistry$CircularQueue	poll()	334	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
335	com.netflix.eureka.registry.AbstractInstanceRegistry$CircularQueue	peek()	336	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
337	com.netflix.eureka.registry.AbstractInstanceRegistry$CircularQueue	clear()	338	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
339	com.netflix.eureka.registry.AbstractInstanceRegistry$CircularQueue	toArray()	340	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
206	com.netflix.eureka.registry.AbstractInstanceRegistry	getInstanceInfoOverrideRule()	0	[]		protected	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
341	com.netflix.eureka.registry.AbstractInstanceRegistry	getOverriddenInstanceStatus(com.netflix.appinfo.InstanceInfo,com.netflix.eureka.lease.Lease,boolean)	0	[false, false, false]		protected	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
342	com.netflix.eureka.registry.AbstractInstanceRegistry	getDeltaRetentionTask()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
343	com.netflix.eureka.registry.AbstractInstanceRegistry$1	run()	167	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java
344	com.netflix.eureka.cluster.HttpReplicationClient	statusUpdate(java.lang.String,com.netflix.eureka.resources.ASGResource.ASGStatus)	0	[false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/HttpReplicationClient.java
345	com.netflix.eureka.cluster.HttpReplicationClient	submitBatchUpdates(com.netflix.eureka.cluster.protocol.ReplicationList)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/HttpReplicationClient.java
346	com.netflix.eureka.util.batcher.TaskDispatcher	process(ID,T,long)	0	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskDispatcher.java
347	com.netflix.eureka.util.batcher.TaskDispatcher	shutdown()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskDispatcher.java
348	com.netflix.eureka.cluster.ReplicationTask	ReplicationTask(java.lang.String,com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.Action)	0	[false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTask.java
349	com.netflix.eureka.cluster.ReplicationTask	getTaskName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTask.java
350	com.netflix.eureka.cluster.ReplicationTask	getAction()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTask.java
249	com.netflix.eureka.cluster.ReplicationTask	execute()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTask.java
351	com.netflix.eureka.cluster.ReplicationTask	handleSuccess()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTask.java
253	com.netflix.eureka.cluster.ReplicationTask	handleFailure(int,java.lang.Object)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTask.java
352	com.netflix.eureka.cluster.protocol.ReplicationList	ReplicationList()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationList.java
353	com.netflix.eureka.cluster.protocol.ReplicationList	ReplicationList(java.util.List)	0	[false]	com.fasterxml.jackson.annotation.JsonCreator	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationList.java
354	com.netflix.eureka.cluster.protocol.ReplicationList	ReplicationList(com.netflix.eureka.cluster.protocol.ReplicationInstance)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationList.java
355	com.netflix.eureka.cluster.protocol.ReplicationList	addReplicationInstance(com.netflix.eureka.cluster.protocol.ReplicationInstance)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationList.java
356	com.netflix.eureka.cluster.protocol.ReplicationList	getReplicationList()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationList.java
357	com.netflix.eureka.cluster.protocol.ReplicationList	equals(java.lang.Object)	177	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationList.java
358	com.netflix.eureka.cluster.protocol.ReplicationList	hashCode()	179	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationList.java
359	com.netflix.eureka.cluster.protocol.ReplicationListResponse	ReplicationListResponse()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationListResponse.java
360	com.netflix.eureka.cluster.protocol.ReplicationListResponse	ReplicationListResponse(java.util.List)	0	[false]	com.fasterxml.jackson.annotation.JsonCreator	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationListResponse.java
361	com.netflix.eureka.cluster.protocol.ReplicationListResponse	getResponseList()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationListResponse.java
362	com.netflix.eureka.cluster.protocol.ReplicationListResponse	addResponse(com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationListResponse.java
363	com.netflix.eureka.cluster.protocol.ReplicationListResponse	equals(java.lang.Object)	177	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationListResponse.java
364	com.netflix.eureka.cluster.protocol.ReplicationListResponse	hashCode()	179	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationListResponse.java
365	com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse	ReplicationInstanceResponse(int,com.netflix.appinfo.InstanceInfo)	0	[false, false]	com.fasterxml.jackson.annotation.JsonCreator	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstanceResponse.java
366	com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse	getStatusCode()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstanceResponse.java
367	com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse	getResponseEntity()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstanceResponse.java
368	com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse	equals(java.lang.Object)	177	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstanceResponse.java
369	com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse	hashCode()	179	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstanceResponse.java
370	com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse$Builder	setStatusCode(int)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstanceResponse.java
371	com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse$Builder	setResponseEntity(com.netflix.appinfo.InstanceInfo)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstanceResponse.java
372	com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse$Builder	build()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstanceResponse.java
373	com.netflix.eureka.cluster.protocol.ReplicationInstance	ReplicationInstance(java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo,com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.Action)	0	[false, false, false, false, false, false, false]	com.fasterxml.jackson.annotation.JsonCreator	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
374	com.netflix.eureka.cluster.protocol.ReplicationInstance	getAppName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
375	com.netflix.eureka.cluster.protocol.ReplicationInstance	getId()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
376	com.netflix.eureka.cluster.protocol.ReplicationInstance	getLastDirtyTimestamp()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
377	com.netflix.eureka.cluster.protocol.ReplicationInstance	getOverriddenStatus()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
378	com.netflix.eureka.cluster.protocol.ReplicationInstance	getStatus()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
379	com.netflix.eureka.cluster.protocol.ReplicationInstance	getInstanceInfo()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
380	com.netflix.eureka.cluster.protocol.ReplicationInstance	getAction()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
381	com.netflix.eureka.cluster.protocol.ReplicationInstance	equals(java.lang.Object)	177	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
382	com.netflix.eureka.cluster.protocol.ReplicationInstance	hashCode()	179	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
383	com.netflix.eureka.cluster.protocol.ReplicationInstance	replicationInstance()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
384	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	ReplicationInstanceBuilder()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
385	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	aReplicationInstance()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
386	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	withAppName(java.lang.String)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
387	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	withId(java.lang.String)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
388	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	withLastDirtyTimestamp(java.lang.Long)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
389	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	withOverriddenStatus(java.lang.String)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
390	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	withStatus(java.lang.String)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
391	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	withInstanceInfo(com.netflix.appinfo.InstanceInfo)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
392	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	withAction(com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.Action)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
393	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	but()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
394	com.netflix.eureka.cluster.protocol.ReplicationInstance$ReplicationInstanceBuilder	build()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/protocol/ReplicationInstance.java
395	com.netflix.eureka.util.MeasuredRate	MeasuredRate(long)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/MeasuredRate.java
396	com.netflix.eureka.util.MeasuredRate	start()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/MeasuredRate.java
397	com.netflix.eureka.util.MeasuredRate$1	run()	167	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/MeasuredRate.java
398	com.netflix.eureka.util.MeasuredRate	stop()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/MeasuredRate.java
399	com.netflix.eureka.util.MeasuredRate	getCount()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/MeasuredRate.java
400	com.netflix.eureka.util.MeasuredRate	increment()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/MeasuredRate.java
401	com.netflix.eureka.registry.rule.InstanceStatusOverrideRule	apply(com.netflix.appinfo.InstanceInfo,com.netflix.eureka.lease.Lease,boolean)	0	[false, false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/InstanceStatusOverrideRule.java
402	com.netflix.eureka.lease.Lease	Lease(T,int)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
403	com.netflix.eureka.lease.Lease	renew()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
404	com.netflix.eureka.lease.Lease	cancel()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
405	com.netflix.eureka.lease.Lease	serviceUp()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
406	com.netflix.eureka.lease.Lease	setServiceUpTimestamp(long)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
407	com.netflix.eureka.lease.Lease	isExpired()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
408	com.netflix.eureka.lease.Lease	isExpired(long)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
409	com.netflix.eureka.lease.Lease	getRegistrationTimestamp()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
410	com.netflix.eureka.lease.Lease	getLastRenewalTimestamp()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
411	com.netflix.eureka.lease.Lease	getEvictionTimestamp()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
412	com.netflix.eureka.lease.Lease	getServiceUpTimestamp()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
413	com.netflix.eureka.lease.Lease	getHolder()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/lease/Lease.java
414	com.netflix.eureka.registry.rule.StatusOverrideResult	matchingStatus(com.netflix.appinfo.InstanceInfo.InstanceStatus)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/StatusOverrideResult.java
415	com.netflix.eureka.registry.rule.StatusOverrideResult	StatusOverrideResult(boolean,com.netflix.appinfo.InstanceInfo.InstanceStatus)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/StatusOverrideResult.java
416	com.netflix.eureka.registry.rule.StatusOverrideResult	matches()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/StatusOverrideResult.java
417	com.netflix.eureka.registry.rule.StatusOverrideResult	status()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/StatusOverrideResult.java
418	com.netflix.eureka.registry.RemoteRegionRegistry	RemoteRegionRegistry(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.resources.ServerCodecs,java.lang.String,java.net.URL)	0	[false, false, false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
419	com.netflix.eureka.registry.RemoteRegionRegistry$1	run()	94	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
420	com.netflix.eureka.registry.RemoteRegionRegistry	isReadyForServingData()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
421	com.netflix.eureka.registry.RemoteRegionRegistry	fetchRegistry()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
422	com.netflix.eureka.registry.RemoteRegionRegistry	fetchAndStoreDelta()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
423	com.netflix.eureka.registry.RemoteRegionRegistry	updateDelta(com.netflix.discovery.shared.Applications)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
424	com.netflix.eureka.registry.RemoteRegionRegistry	closeResponse(com.sun.jersey.api.client.ClientResponse)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
425	com.netflix.eureka.registry.RemoteRegionRegistry	storeFullRegistry()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
426	com.netflix.eureka.registry.RemoteRegionRegistry	fetchRemoteRegistry(boolean)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
427	com.netflix.eureka.registry.RemoteRegionRegistry	reconcileAndLogDifference(com.netflix.discovery.shared.Applications,java.lang.String)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
428	com.netflix.eureka.registry.RemoteRegionRegistry	logTotalInstances()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
429	com.netflix.eureka.registry.RemoteRegionRegistry	getApplications()	298	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
430	com.netflix.eureka.registry.RemoteRegionRegistry	getNextServerFromEureka(java.lang.String,boolean)	234	[false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
431	com.netflix.eureka.registry.RemoteRegionRegistry	getApplication(java.lang.String)	295	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
432	com.netflix.eureka.registry.RemoteRegionRegistry	getInstancesById(java.lang.String)	309	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
433	com.netflix.eureka.registry.RemoteRegionRegistry	getApplicationDeltas()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
434	com.netflix.eureka.registry.RemoteRegionRegistry	shouldUseExperimentalTransport()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
435	com.netflix.eureka.registry.RemoteRegionRegistry	getTimeOfLastSuccessfulRemoteFetch()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
436	com.netflix.eureka.registry.RemoteRegionRegistry	getRemoteFetchSuccesses()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
437	com.netflix.eureka.registry.RemoteRegionRegistry	getRemoteFetchMismatches()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/RemoteRegionRegistry.java
438	com.netflix.eureka.RateLimitingFilter	RateLimitingFilter(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
439	com.netflix.eureka.RateLimitingFilter	RateLimitingFilter()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
440	com.netflix.eureka.RateLimitingFilter	init(javax.servlet.FilterConfig)	441	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
442	com.netflix.eureka.RateLimitingFilter	doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)	443	[false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
444	com.netflix.eureka.RateLimitingFilter	getTarget(javax.servlet.ServletRequest)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
445	com.netflix.eureka.RateLimitingFilter	isRateLimited(javax.servlet.http.HttpServletRequest,com.netflix.eureka.RateLimitingFilter.Target)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
446	com.netflix.eureka.RateLimitingFilter	isPrivileged(javax.servlet.http.HttpServletRequest)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
447	com.netflix.eureka.RateLimitingFilter	isOverloaded(com.netflix.eureka.RateLimitingFilter.Target)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
448	com.netflix.eureka.RateLimitingFilter	incrementStats(com.netflix.eureka.RateLimitingFilter.Target)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
449	com.netflix.eureka.RateLimitingFilter	destroy()	450	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
451	com.netflix.eureka.RateLimitingFilter	reset()	0	[]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/RateLimitingFilter.java
452	com.netflix.eureka.cluster.InstanceReplicationTask	InstanceReplicationTask(java.lang.String,com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.Action,java.lang.String,java.lang.String)	0	[false, false, false, false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/InstanceReplicationTask.java
453	com.netflix.eureka.cluster.InstanceReplicationTask	InstanceReplicationTask(java.lang.String,com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.Action,com.netflix.appinfo.InstanceInfo,com.netflix.appinfo.InstanceInfo.InstanceStatus,boolean)	0	[false, false, false, false, false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/InstanceReplicationTask.java
454	com.netflix.eureka.cluster.InstanceReplicationTask	getTaskName()	349	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/InstanceReplicationTask.java
455	com.netflix.eureka.cluster.InstanceReplicationTask	getAppName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/InstanceReplicationTask.java
456	com.netflix.eureka.cluster.InstanceReplicationTask	getId()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/InstanceReplicationTask.java
457	com.netflix.eureka.cluster.InstanceReplicationTask	getInstanceInfo()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/InstanceReplicationTask.java
458	com.netflix.eureka.cluster.InstanceReplicationTask	getOverriddenStatus()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/InstanceReplicationTask.java
459	com.netflix.eureka.cluster.InstanceReplicationTask	shouldReplicateInstanceInfo()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/InstanceReplicationTask.java
460	com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter	DynamicGZIPContentEncodingFilter(com.netflix.eureka.EurekaServerConfig)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/DynamicGZIPContentEncodingFilter.java
461	com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter	handle(com.sun.jersey.api.client.ClientRequest)	462	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/DynamicGZIPContentEncodingFilter.java
463	com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter	isCompressionEnabled()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/DynamicGZIPContentEncodingFilter.java
464	com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter	decompressResponse(com.sun.jersey.api.client.ClientResponse)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/DynamicGZIPContentEncodingFilter.java
465	com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter$GzipAdapter	GzipAdapter(com.sun.jersey.api.client.ClientRequestAdapter)	0	[false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/DynamicGZIPContentEncodingFilter.java
466	com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter$GzipAdapter	adapt(com.sun.jersey.api.client.ClientRequest,java.io.OutputStream)	467	[false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/DynamicGZIPContentEncodingFilter.java
468	com.netflix.eureka.cluster.AsgReplicationTask	AsgReplicationTask(java.lang.String,com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.Action,java.lang.String,com.netflix.eureka.resources.ASGResource.ASGStatus)	0	[false, false, false, false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/AsgReplicationTask.java
469	com.netflix.eureka.cluster.AsgReplicationTask	getTaskName()	349	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/AsgReplicationTask.java
470	com.netflix.eureka.cluster.AsgReplicationTask	getAsgName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/AsgReplicationTask.java
471	com.netflix.eureka.cluster.AsgReplicationTask	getNewStatus()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/AsgReplicationTask.java
472	com.netflix.eureka.cluster.ReplicationTaskProcessor	ReplicationTaskProcessor(java.lang.String,com.netflix.eureka.cluster.HttpReplicationClient)	0	[false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
473	com.netflix.eureka.cluster.ReplicationTaskProcessor	process(com.netflix.eureka.cluster.ReplicationTask)	474	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
475	com.netflix.eureka.cluster.ReplicationTaskProcessor	process(java.util.List)	476	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
477	com.netflix.eureka.cluster.ReplicationTaskProcessor	logNetworkErrorSample(com.netflix.eureka.cluster.ReplicationTask,java.lang.Throwable)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
478	com.netflix.eureka.cluster.ReplicationTaskProcessor	handleBatchResponse(java.util.List,java.util.List)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
479	com.netflix.eureka.cluster.ReplicationTaskProcessor	handleBatchResponse(com.netflix.eureka.cluster.ReplicationTask,com.netflix.eureka.cluster.protocol.ReplicationInstanceResponse)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
480	com.netflix.eureka.cluster.ReplicationTaskProcessor	createReplicationListOf(java.util.List)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
481	com.netflix.eureka.cluster.ReplicationTaskProcessor	isSuccess(int)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
482	com.netflix.eureka.cluster.ReplicationTaskProcessor	isNetworkConnectException(java.lang.Throwable)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
483	com.netflix.eureka.cluster.ReplicationTaskProcessor	maybeReadTimeOut(java.lang.Throwable)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
484	com.netflix.eureka.cluster.ReplicationTaskProcessor	createReplicationInstanceOf(com.netflix.eureka.cluster.InstanceReplicationTask)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/cluster/ReplicationTaskProcessor.java
474	com.netflix.eureka.util.batcher.TaskProcessor	process(T)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskProcessor.java
476	com.netflix.eureka.util.batcher.TaskProcessor	process(java.util.List)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskProcessor.java
485	com.netflix.eureka.EurekaBootStrap	EurekaBootStrap()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
486	com.netflix.eureka.EurekaBootStrap	EurekaBootStrap(com.netflix.discovery.EurekaClient)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
487	com.netflix.eureka.EurekaBootStrap	contextInitialized(javax.servlet.ServletContextEvent)	488	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
489	com.netflix.eureka.EurekaBootStrap	initEurekaEnvironment()	0	[]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
490	com.netflix.eureka.EurekaBootStrap	initEurekaServerContext()	0	[]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
491	com.netflix.eureka.EurekaBootStrap	getPeerEurekaNodes(com.netflix.eureka.registry.PeerAwareInstanceRegistry,com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.resources.ServerCodecs,com.netflix.appinfo.ApplicationInfoManager)	0	[false, false, false, false, false]		protected	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
492	com.netflix.eureka.EurekaBootStrap	contextDestroyed(javax.servlet.ServletContextEvent)	493	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
494	com.netflix.eureka.EurekaBootStrap	destroyEurekaServerContext()	0	[]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
495	com.netflix.eureka.EurekaBootStrap	destroyEurekaEnvironment()	0	[]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
496	com.netflix.eureka.EurekaBootStrap	isAws(com.netflix.appinfo.InstanceInfo)	0	[false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
497	com.netflix.eureka.EurekaBootStrap	isCloud(com.netflix.config.DeploymentContext)	0	[false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaBootStrap.java
498	com.netflix.eureka.aws.AwsBinder	start()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsBinder.java
499	com.netflix.eureka.aws.AwsBinder	shutdown()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsBinder.java
500	com.netflix.eureka.transport.EurekaServerHttpClients	EurekaServerHttpClients()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/EurekaServerHttpClients.java
501	com.netflix.eureka.transport.EurekaServerHttpClients	createRemoteRegionClient(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.shared.transport.EurekaTransportConfig,com.netflix.eureka.resources.ServerCodecs,com.netflix.discovery.shared.resolver.ClusterResolver)	0	[false, false, false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/EurekaServerHttpClients.java
502	com.netflix.eureka.transport.EurekaServerHttpClients	createFactory(com.netflix.discovery.shared.transport.TransportClientFactory)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/EurekaServerHttpClients.java
503	com.netflix.eureka.transport.EurekaServerHttpClients$1	newClient(com.netflix.discovery.shared.resolver.EurekaEndpoint)	504	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/EurekaServerHttpClients.java
505	com.netflix.eureka.transport.EurekaServerHttpClients$1	shutdown()	506	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/EurekaServerHttpClients.java
507	com.netflix.eureka.transport.JerseyReplicationClient	JerseyReplicationClient(com.netflix.discovery.shared.transport.jersey.EurekaJerseyClient,java.lang.String)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyReplicationClient.java
508	com.netflix.eureka.transport.JerseyReplicationClient	addExtraHeaders(com.sun.jersey.api.client.WebResource.Builder)	509	[false]	java.lang.Override	protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyReplicationClient.java
510	com.netflix.eureka.transport.JerseyReplicationClient	sendHeartBeat(java.lang.String,java.lang.String,com.netflix.appinfo.InstanceInfo,com.netflix.appinfo.InstanceInfo.InstanceStatus)	511	[false, false, false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyReplicationClient.java
512	com.netflix.eureka.transport.JerseyReplicationClient	statusUpdate(java.lang.String,com.netflix.eureka.resources.ASGResource.ASGStatus)	344	[false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyReplicationClient.java
513	com.netflix.eureka.transport.JerseyReplicationClient	submitBatchUpdates(com.netflix.eureka.cluster.protocol.ReplicationList)	345	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyReplicationClient.java
514	com.netflix.eureka.transport.JerseyReplicationClient	addReplicationClientFilter(com.sun.jersey.api.client.filter.ClientFilter)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyReplicationClient.java
515	com.netflix.eureka.transport.JerseyReplicationClient	shutdown()	516	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyReplicationClient.java
517	com.netflix.eureka.transport.JerseyReplicationClient	createReplicationClient(com.netflix.eureka.EurekaServerConfig,com.netflix.eureka.resources.ServerCodecs,java.lang.String)	0	[false, false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyReplicationClient.java
518	com.netflix.eureka.transport.JerseyReplicationClient	isSuccess(int)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyReplicationClient.java
519	com.netflix.eureka.transport.JerseyRemoteRegionClientFactory	JerseyRemoteRegionClientFactory(com.netflix.eureka.EurekaServerConfig,com.netflix.eureka.resources.ServerCodecs,java.lang.String)	0	[false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyRemoteRegionClientFactory.java
520	com.netflix.eureka.transport.JerseyRemoteRegionClientFactory	newClient(com.netflix.discovery.shared.resolver.EurekaEndpoint)	504	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyRemoteRegionClientFactory.java
521	com.netflix.eureka.transport.JerseyRemoteRegionClientFactory	shutdown()	506	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyRemoteRegionClientFactory.java
522	com.netflix.eureka.transport.JerseyRemoteRegionClientFactory	getOrCreateJerseyClient(java.lang.String,com.netflix.discovery.shared.resolver.EurekaEndpoint)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/transport/JerseyRemoteRegionClientFactory.java
523	com.netflix.eureka.util.StatusInfo$Builder	Builder()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
524	com.netflix.eureka.util.StatusInfo$Builder	newBuilder()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
525	com.netflix.eureka.util.StatusInfo$Builder	isHealthy(boolean)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
526	com.netflix.eureka.util.StatusInfo$Builder	withInstanceInfo(com.netflix.appinfo.InstanceInfo)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
527	com.netflix.eureka.util.StatusInfo$Builder	add(java.lang.String,java.lang.String)	0	[false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
528	com.netflix.eureka.util.StatusInfo$Builder	build()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
529	com.netflix.eureka.util.StatusInfo	StatusInfo()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
530	com.netflix.eureka.util.StatusInfo	getInstanceInfo()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
531	com.netflix.eureka.util.StatusInfo	isHealthy()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
532	com.netflix.eureka.util.StatusInfo	getGeneralStats()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
533	com.netflix.eureka.util.StatusInfo	getApplicationStats()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
534	com.netflix.eureka.util.StatusInfo	getUpTime()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
535	com.netflix.eureka.util.StatusInfo	getCurrentTimeAsString()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
536	com.netflix.eureka.util.StatusInfo	classExists(java.lang.String)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusInfo.java
537	com.netflix.eureka.util.ServoControl	ServoControl(com.netflix.servo.monitor.MonitorConfig,com.netflix.servo.stats.StatsConfig)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/ServoControl.java
538	com.netflix.eureka.util.ServoControl	shutdown()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/ServoControl.java
539	com.netflix.eureka.util.StatusUtil	StatusUtil(com.netflix.eureka.EurekaServerContext)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusUtil.java
540	com.netflix.eureka.util.StatusUtil	getStatusInfo()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusUtil.java
541	com.netflix.eureka.util.StatusUtil	isReplicaAvailable(java.lang.String)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/StatusUtil.java
542	com.netflix.eureka.util.batcher.AcceptorExecutor	AcceptorExecutor(java.lang.String,int,int,long,long,long)	0	[false, false, false, false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
543	com.netflix.eureka.util.batcher.AcceptorExecutor	process(ID,T,long)	0	[false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
544	com.netflix.eureka.util.batcher.AcceptorExecutor	reprocess(java.util.List,com.netflix.eureka.util.batcher.TaskProcessor.ProcessingResult)	0	[false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
545	com.netflix.eureka.util.batcher.AcceptorExecutor	reprocess(com.netflix.eureka.util.batcher.TaskHolder,com.netflix.eureka.util.batcher.TaskProcessor.ProcessingResult)	0	[false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
546	com.netflix.eureka.util.batcher.AcceptorExecutor	requestWorkItem()	0	[]		package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
547	com.netflix.eureka.util.batcher.AcceptorExecutor	requestWorkItems()	0	[]		package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
548	com.netflix.eureka.util.batcher.AcceptorExecutor	shutdown()	0	[]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
549	com.netflix.eureka.util.batcher.AcceptorExecutor	getAcceptorQueueSize()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
550	com.netflix.eureka.util.batcher.AcceptorExecutor	getReprocessQueueSize()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
551	com.netflix.eureka.util.batcher.AcceptorExecutor	getQueueSize()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
552	com.netflix.eureka.util.batcher.AcceptorExecutor	getPendingJobRequests()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
553	com.netflix.eureka.util.batcher.AcceptorExecutor	workerTaskQueueSize()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
554	com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner	run()	94	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
555	com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner	isFull()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
556	com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner	drainInputQueues()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
557	com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner	drainAcceptorQueue()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
558	com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner	drainReprocessQueue()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
559	com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner	appendTaskHolder(com.netflix.eureka.util.batcher.TaskHolder)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
560	com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner	assignSingleItemWork()	0	[]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
561	com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner	assignBatchWork()	0	[]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
562	com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner	hasEnoughTasksForNextBatch()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/AcceptorExecutor.java
563	com.netflix.eureka.util.batcher.TaskHolder	TaskHolder(ID,T,long)	0	[false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskHolder.java
564	com.netflix.eureka.util.batcher.TaskHolder	getId()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskHolder.java
565	com.netflix.eureka.util.batcher.TaskHolder	getTask()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskHolder.java
566	com.netflix.eureka.util.batcher.TaskHolder	getExpiryTime()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskHolder.java
567	com.netflix.eureka.util.batcher.TaskHolder	getSubmitTimestamp()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskHolder.java
568	com.netflix.eureka.util.batcher.TrafficShaper	TrafficShaper(long,long)	0	[false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TrafficShaper.java
569	com.netflix.eureka.util.batcher.TrafficShaper	registerFailure(com.netflix.eureka.util.batcher.TaskProcessor.ProcessingResult)	0	[false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TrafficShaper.java
570	com.netflix.eureka.util.batcher.TrafficShaper	transmissionDelay()	0	[]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TrafficShaper.java
571	com.netflix.eureka.util.batcher.TaskDispatchers	createNonBatchingTaskDispatcher(java.lang.String,int,int,long,long,long,com.netflix.eureka.util.batcher.TaskProcessor)	0	[false, false, false, false, false, false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskDispatchers.java
572	com.netflix.eureka.util.batcher.TaskDispatchers$1	process(ID,T,long)	346	[false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskDispatchers.java
573	com.netflix.eureka.util.batcher.TaskDispatchers$1	shutdown()	347	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskDispatchers.java
574	com.netflix.eureka.util.batcher.TaskDispatchers	createBatchingTaskDispatcher(java.lang.String,int,int,int,long,long,long,com.netflix.eureka.util.batcher.TaskProcessor)	0	[false, false, false, false, false, false, false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskDispatchers.java
575	com.netflix.eureka.util.batcher.TaskDispatchers$2	process(ID,T,long)	346	[false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskDispatchers.java
576	com.netflix.eureka.util.batcher.TaskDispatchers$2	shutdown()	347	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskDispatchers.java
577	com.netflix.eureka.util.batcher.TaskExecutors	TaskExecutors(com.netflix.eureka.util.batcher.TaskExecutors.WorkerRunnableFactory,int,java.util.concurrent.atomic.AtomicBoolean)	0	[false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
578	com.netflix.eureka.util.batcher.TaskExecutors	shutdown()	0	[]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
579	com.netflix.eureka.util.batcher.TaskExecutors	singleItemExecutors(java.lang.String,int,com.netflix.eureka.util.batcher.TaskProcessor,com.netflix.eureka.util.batcher.AcceptorExecutor)	0	[false, false, false, false]		package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
580	com.netflix.eureka.util.batcher.TaskExecutors	batchExecutors(java.lang.String,int,com.netflix.eureka.util.batcher.TaskProcessor,com.netflix.eureka.util.batcher.AcceptorExecutor)	0	[false, false, false, false]		package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
581	com.netflix.eureka.util.batcher.TaskExecutors$TaskExecutorMetrics	TaskExecutorMetrics(java.lang.String)	0	[false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
582	com.netflix.eureka.util.batcher.TaskExecutors$TaskExecutorMetrics	registerTaskResult(com.netflix.eureka.util.batcher.TaskProcessor.ProcessingResult,int)	0	[false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
583	com.netflix.eureka.util.batcher.TaskExecutors$TaskExecutorMetrics	registerExpiryTime(com.netflix.eureka.util.batcher.TaskHolder)	0	[false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
584	com.netflix.eureka.util.batcher.TaskExecutors$TaskExecutorMetrics	registerExpiryTimes(java.util.List)	0	[false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
585	com.netflix.eureka.util.batcher.TaskExecutors$WorkerRunnableFactory	create(int)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
586	com.netflix.eureka.util.batcher.TaskExecutors$WorkerRunnable	WorkerRunnable(java.lang.String,java.util.concurrent.atomic.AtomicBoolean,com.netflix.eureka.util.batcher.TaskExecutors.TaskExecutorMetrics,com.netflix.eureka.util.batcher.TaskProcessor,com.netflix.eureka.util.batcher.AcceptorExecutor)	0	[false, false, false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
587	com.netflix.eureka.util.batcher.TaskExecutors$WorkerRunnable	getWorkerName()	0	[]		package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
588	com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable	BatchWorkerRunnable(java.lang.String,java.util.concurrent.atomic.AtomicBoolean,com.netflix.eureka.util.batcher.TaskExecutors.TaskExecutorMetrics,com.netflix.eureka.util.batcher.TaskProcessor,com.netflix.eureka.util.batcher.AcceptorExecutor)	0	[false, false, false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
589	com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable	run()	94	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
590	com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable	getWork()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
591	com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable	getTasksOf(java.util.List)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
592	com.netflix.eureka.util.batcher.TaskExecutors$SingleTaskWorkerRunnable	SingleTaskWorkerRunnable(java.lang.String,java.util.concurrent.atomic.AtomicBoolean,com.netflix.eureka.util.batcher.TaskExecutors.TaskExecutorMetrics,com.netflix.eureka.util.batcher.TaskProcessor,com.netflix.eureka.util.batcher.AcceptorExecutor)	0	[false, false, false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
593	com.netflix.eureka.util.batcher.TaskExecutors$SingleTaskWorkerRunnable	run()	94	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/util/batcher/TaskExecutors.java
594	com.netflix.eureka.resources.DefaultServerCodecs	getFullJson(com.netflix.eureka.EurekaServerConfig)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
595	com.netflix.eureka.resources.DefaultServerCodecs	getFullXml(com.netflix.eureka.EurekaServerConfig)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
596	com.netflix.eureka.resources.DefaultServerCodecs	DefaultServerCodecs(com.netflix.eureka.EurekaServerConfig)	0	[false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
597	com.netflix.eureka.resources.DefaultServerCodecs	DefaultServerCodecs(com.netflix.discovery.converters.wrappers.CodecWrapper,com.netflix.discovery.converters.wrappers.CodecWrapper,com.netflix.discovery.converters.wrappers.CodecWrapper,com.netflix.discovery.converters.wrappers.CodecWrapper)	0	[false, false, false, false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
598	com.netflix.eureka.resources.DefaultServerCodecs	getFullJsonCodec()	103	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
599	com.netflix.eureka.resources.DefaultServerCodecs	getCompactJsonCodec()	104	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
600	com.netflix.eureka.resources.DefaultServerCodecs	getFullXmlCodec()	105	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
601	com.netflix.eureka.resources.DefaultServerCodecs	getCompactXmlCodecr()	106	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
602	com.netflix.eureka.resources.DefaultServerCodecs	getEncoder(com.netflix.eureka.registry.Key.KeyType,boolean)	107	[false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
603	com.netflix.eureka.resources.DefaultServerCodecs	getEncoder(com.netflix.eureka.registry.Key.KeyType,com.netflix.appinfo.EurekaAccept)	108	[false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
604	com.netflix.eureka.resources.DefaultServerCodecs	builder()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
605	com.netflix.eureka.resources.DefaultServerCodecs$Builder	Builder()	0	[]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
606	com.netflix.eureka.resources.DefaultServerCodecs$Builder	withFullJsonCodec(com.netflix.discovery.converters.wrappers.CodecWrapper)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
607	com.netflix.eureka.resources.DefaultServerCodecs$Builder	withCompactJsonCodec(com.netflix.discovery.converters.wrappers.CodecWrapper)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
608	com.netflix.eureka.resources.DefaultServerCodecs$Builder	withFullXmlCodec(com.netflix.discovery.converters.wrappers.CodecWrapper)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
609	com.netflix.eureka.resources.DefaultServerCodecs$Builder	withCompactXmlCodec(com.netflix.discovery.converters.wrappers.CodecWrapper)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
610	com.netflix.eureka.resources.DefaultServerCodecs$Builder	withEurekaServerConfig(com.netflix.eureka.EurekaServerConfig)	0	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
611	com.netflix.eureka.resources.DefaultServerCodecs$Builder	build()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/DefaultServerCodecs.java
612	com.netflix.eureka.resources.ServerInfoResource	ServerInfoResource(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ServerInfoResource.java
613	com.netflix.eureka.resources.ServerInfoResource	ServerInfoResource()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ServerInfoResource.java
614	com.netflix.eureka.resources.ServerInfoResource	getOverrides()	0	[]	javax.ws.rs.GET,javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ServerInfoResource.java
615	com.netflix.eureka.resources.VIPResource	VIPResource(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/VIPResource.java
616	com.netflix.eureka.resources.VIPResource	VIPResource()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/VIPResource.java
617	com.netflix.eureka.resources.VIPResource	statusUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	0	[false, false, false, false]	javax.ws.rs.GET,javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/VIPResource.java
618	com.netflix.eureka.resources.AbstractVIPResource	AbstractVIPResource(com.netflix.eureka.EurekaServerContext)	0	[false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/AbstractVIPResource.java
619	com.netflix.eureka.resources.AbstractVIPResource	AbstractVIPResource()	0	[]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/AbstractVIPResource.java
620	com.netflix.eureka.resources.AbstractVIPResource	getVipResponse(java.lang.String,java.lang.String,java.lang.String,com.netflix.appinfo.EurekaAccept,com.netflix.eureka.registry.Key.EntityType)	0	[false, false, false, false, false]		protected	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/AbstractVIPResource.java
621	com.netflix.eureka.resources.StatusResource	StatusResource(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/StatusResource.java
622	com.netflix.eureka.resources.StatusResource	StatusResource()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/StatusResource.java
623	com.netflix.eureka.resources.StatusResource	getStatusInfo()	0	[]	javax.ws.rs.GET	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/StatusResource.java
624	com.netflix.eureka.resources.StatusResource	getCurrentTimeAsString()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/StatusResource.java
625	com.netflix.eureka.resources.SecureVIPResource	SecureVIPResource(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/SecureVIPResource.java
626	com.netflix.eureka.resources.SecureVIPResource	SecureVIPResource()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/SecureVIPResource.java
627	com.netflix.eureka.resources.SecureVIPResource	statusUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	0	[false, false, false, false]	javax.ws.rs.GET,javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/SecureVIPResource.java
628	com.netflix.eureka.resources.InstanceResource	InstanceResource(com.netflix.eureka.resources.ApplicationResource,java.lang.String,com.netflix.eureka.EurekaServerConfig,com.netflix.eureka.registry.PeerAwareInstanceRegistry)	0	[false, false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstanceResource.java
629	com.netflix.eureka.resources.InstanceResource	getInstanceInfo()	0	[]	javax.ws.rs.GET	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstanceResource.java
630	com.netflix.eureka.resources.InstanceResource	renewLease(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	0	[false, false, false, false]	javax.ws.rs.PUT	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstanceResource.java
631	com.netflix.eureka.resources.InstanceResource	statusUpdate(java.lang.String,java.lang.String,java.lang.String)	0	[false, false, false]	javax.ws.rs.PUT,javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstanceResource.java
632	com.netflix.eureka.resources.InstanceResource	deleteStatusUpdate(java.lang.String,java.lang.String,java.lang.String)	0	[false, false, false]	javax.ws.rs.DELETE,javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstanceResource.java
633	com.netflix.eureka.resources.InstanceResource	updateMetadata(javax.ws.rs.core.UriInfo)	0	[false]	javax.ws.rs.PUT,javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstanceResource.java
634	com.netflix.eureka.resources.InstanceResource	cancelLease(java.lang.String)	0	[false]	javax.ws.rs.DELETE	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstanceResource.java
635	com.netflix.eureka.resources.InstanceResource	validateDirtyTimestamp(java.lang.Long,boolean)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstanceResource.java
636	com.netflix.eureka.resources.ApplicationResource	ApplicationResource(java.lang.String,com.netflix.eureka.EurekaServerConfig,com.netflix.eureka.registry.PeerAwareInstanceRegistry)	0	[false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationResource.java
637	com.netflix.eureka.resources.ApplicationResource	getAppName()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationResource.java
638	com.netflix.eureka.resources.ApplicationResource	getApplication(java.lang.String,java.lang.String,java.lang.String)	0	[false, false, false]	javax.ws.rs.GET	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationResource.java
639	com.netflix.eureka.resources.ApplicationResource	getInstanceInfo(java.lang.String)	0	[false]	javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationResource.java
640	com.netflix.eureka.resources.ApplicationResource	addInstance(com.netflix.appinfo.InstanceInfo,java.lang.String)	0	[false, false]	javax.ws.rs.POST,javax.ws.rs.Consumes	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationResource.java
641	com.netflix.eureka.resources.ApplicationResource	getName()	0	[]		package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationResource.java
642	com.netflix.eureka.resources.ApplicationResource	isBlank(java.lang.String)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationResource.java
643	com.netflix.eureka.resources.PeerReplicationResource	PeerReplicationResource(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
644	com.netflix.eureka.resources.PeerReplicationResource	PeerReplicationResource()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
645	com.netflix.eureka.resources.PeerReplicationResource	batchReplication(com.netflix.eureka.cluster.protocol.ReplicationList)	0	[false]	javax.ws.rs.Path,javax.ws.rs.POST	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
646	com.netflix.eureka.resources.PeerReplicationResource	dispatch(com.netflix.eureka.cluster.protocol.ReplicationInstance)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
647	com.netflix.eureka.resources.PeerReplicationResource	createApplicationResource(com.netflix.eureka.cluster.protocol.ReplicationInstance)	0	[false]		package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
648	com.netflix.eureka.resources.PeerReplicationResource	createInstanceResource(com.netflix.eureka.cluster.protocol.ReplicationInstance,com.netflix.eureka.resources.ApplicationResource)	0	[false, false]		package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
649	com.netflix.eureka.resources.PeerReplicationResource	handleRegister(com.netflix.eureka.cluster.protocol.ReplicationInstance,com.netflix.eureka.resources.ApplicationResource)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
650	com.netflix.eureka.resources.PeerReplicationResource	handleCancel(com.netflix.eureka.resources.InstanceResource)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
651	com.netflix.eureka.resources.PeerReplicationResource	handleHeartbeat(com.netflix.eureka.EurekaServerConfig,com.netflix.eureka.resources.InstanceResource,java.lang.String,java.lang.String,java.lang.String)	0	[false, false, false, false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
652	com.netflix.eureka.resources.PeerReplicationResource	handleStatusUpdate(com.netflix.eureka.cluster.protocol.ReplicationInstance,com.netflix.eureka.resources.InstanceResource)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
653	com.netflix.eureka.resources.PeerReplicationResource	handleDeleteStatusOverride(com.netflix.eureka.cluster.protocol.ReplicationInstance,com.netflix.eureka.resources.InstanceResource)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
654	com.netflix.eureka.resources.PeerReplicationResource	toString(T)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/PeerReplicationResource.java
655	com.netflix.eureka.resources.ApplicationsResource	ApplicationsResource(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationsResource.java
656	com.netflix.eureka.resources.ApplicationsResource	ApplicationsResource()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationsResource.java
657	com.netflix.eureka.resources.ApplicationsResource	getApplicationResource(java.lang.String,java.lang.String)	0	[false, false]	javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationsResource.java
658	com.netflix.eureka.resources.ApplicationsResource	getContainers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.ws.rs.core.UriInfo,java.lang.String)	0	[false, false, false, false, false, true]	javax.ws.rs.GET	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationsResource.java
659	com.netflix.eureka.resources.ApplicationsResource	getContainerDifferential(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.ws.rs.core.UriInfo,java.lang.String)	0	[false, false, false, false, false, true]	javax.ws.rs.Path,javax.ws.rs.GET	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/ApplicationsResource.java
660	com.netflix.eureka.resources.InstancesResource	InstancesResource(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstancesResource.java
661	com.netflix.eureka.resources.InstancesResource	InstancesResource()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstancesResource.java
662	com.netflix.eureka.resources.InstancesResource	getById(java.lang.String,java.lang.String)	0	[false, false]	javax.ws.rs.GET,javax.ws.rs.Path	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/InstancesResource.java
663	com.netflix.eureka.resources.CurrentRequestVersion	CurrentRequestVersion()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/CurrentRequestVersion.java
664	com.netflix.eureka.resources.CurrentRequestVersion	get()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/CurrentRequestVersion.java
665	com.netflix.eureka.resources.CurrentRequestVersion	set(com.netflix.eureka.Version)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/CurrentRequestVersion.java
666	com.netflix.eureka.resources.CurrentRequestVersion	remove()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/resources/CurrentRequestVersion.java
667	com.netflix.eureka.ServerRequestAuthFilter	ServerRequestAuthFilter(com.netflix.eureka.EurekaServerContext)	0	[false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/ServerRequestAuthFilter.java
668	com.netflix.eureka.ServerRequestAuthFilter	ServerRequestAuthFilter()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/ServerRequestAuthFilter.java
669	com.netflix.eureka.ServerRequestAuthFilter	init(javax.servlet.FilterConfig)	441	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/ServerRequestAuthFilter.java
670	com.netflix.eureka.ServerRequestAuthFilter	doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)	443	[false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/ServerRequestAuthFilter.java
671	com.netflix.eureka.ServerRequestAuthFilter	destroy()	450	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/ServerRequestAuthFilter.java
672	com.netflix.eureka.ServerRequestAuthFilter	logAuth(javax.servlet.ServletRequest)	0	[false]		protected	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/ServerRequestAuthFilter.java
673	com.netflix.eureka.ServerRequestAuthFilter	getHeader(javax.servlet.http.HttpServletRequest,java.lang.String)	0	[false, false]		protected	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/ServerRequestAuthFilter.java
674	com.netflix.eureka.DefaultEurekaServerContext	DefaultEurekaServerContext(com.netflix.eureka.EurekaServerConfig,com.netflix.eureka.resources.ServerCodecs,com.netflix.eureka.registry.PeerAwareInstanceRegistry,com.netflix.eureka.cluster.PeerEurekaNodes,com.netflix.appinfo.ApplicationInfoManager)	0	[false, false, false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerContext.java
675	com.netflix.eureka.DefaultEurekaServerContext	initialize()	2	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerContext.java
676	com.netflix.eureka.DefaultEurekaServerContext	shutdown()	3	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerContext.java
677	com.netflix.eureka.DefaultEurekaServerContext	getServerConfig()	4	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerContext.java
678	com.netflix.eureka.DefaultEurekaServerContext	getPeerEurekaNodes()	5	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerContext.java
679	com.netflix.eureka.DefaultEurekaServerContext	getServerCodecs()	6	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerContext.java
680	com.netflix.eureka.DefaultEurekaServerContext	getRegistry()	7	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerContext.java
681	com.netflix.eureka.DefaultEurekaServerContext	getApplicationInfoManager()	8	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerContext.java
682	com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule	apply(com.netflix.appinfo.InstanceInfo,com.netflix.eureka.lease.Lease,boolean)	401	[false, false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/AlwaysMatchInstanceStatusRule.java
683	com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule	toString()	175	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/AlwaysMatchInstanceStatusRule.java
684	com.netflix.eureka.registry.rule.AsgEnabledRule	AsgEnabledRule(com.netflix.eureka.aws.AsgClient)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/AsgEnabledRule.java
685	com.netflix.eureka.registry.rule.AsgEnabledRule	apply(com.netflix.appinfo.InstanceInfo,com.netflix.eureka.lease.Lease,boolean)	401	[false, false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/AsgEnabledRule.java
686	com.netflix.eureka.registry.rule.AsgEnabledRule	toString()	175	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/AsgEnabledRule.java
687	com.netflix.eureka.registry.rule.LeaseExistsRule	apply(com.netflix.appinfo.InstanceInfo,com.netflix.eureka.lease.Lease,boolean)	401	[false, false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/LeaseExistsRule.java
688	com.netflix.eureka.registry.rule.LeaseExistsRule	toString()	175	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/LeaseExistsRule.java
689	com.netflix.eureka.registry.rule.DownOrStartingRule	apply(com.netflix.appinfo.InstanceInfo,com.netflix.eureka.lease.Lease,boolean)	401	[false, false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/DownOrStartingRule.java
690	com.netflix.eureka.registry.rule.DownOrStartingRule	toString()	175	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/DownOrStartingRule.java
691	com.netflix.eureka.registry.rule.OverrideExistsRule	OverrideExistsRule(java.util.Map)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/OverrideExistsRule.java
692	com.netflix.eureka.registry.rule.OverrideExistsRule	apply(com.netflix.appinfo.InstanceInfo,com.netflix.eureka.lease.Lease,boolean)	401	[false, false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/OverrideExistsRule.java
693	com.netflix.eureka.registry.rule.OverrideExistsRule	toString()	175	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/OverrideExistsRule.java
694	com.netflix.eureka.registry.rule.FirstMatchWinsCompositeRule	FirstMatchWinsCompositeRule(com.netflix.eureka.registry.rule.InstanceStatusOverrideRule[])	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/FirstMatchWinsCompositeRule.java
695	com.netflix.eureka.registry.rule.FirstMatchWinsCompositeRule	apply(com.netflix.appinfo.InstanceInfo,com.netflix.eureka.lease.Lease,boolean)	401	[false, false, false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/FirstMatchWinsCompositeRule.java
696	com.netflix.eureka.registry.rule.FirstMatchWinsCompositeRule	toString()	175	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/rule/FirstMatchWinsCompositeRule.java
697	com.netflix.eureka.registry.AwsInstanceRegistry	AwsInstanceRegistry(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.resources.ServerCodecs,com.netflix.discovery.EurekaClient)	0	[false, false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AwsInstanceRegistry.java
698	com.netflix.eureka.registry.AwsInstanceRegistry	init(com.netflix.eureka.cluster.PeerEurekaNodes)	207	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AwsInstanceRegistry.java
699	com.netflix.eureka.registry.AwsInstanceRegistry	getInstanceInfoOverrideRule()	205	[]	java.lang.Override	protected	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AwsInstanceRegistry.java
700	com.netflix.eureka.registry.AwsInstanceRegistry	getAwsAsgUtil()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/AwsInstanceRegistry.java
701	com.netflix.eureka.registry.ResponseCacheImpl$1	get()	702	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
703	com.netflix.eureka.registry.ResponseCacheImpl	ResponseCacheImpl(com.netflix.eureka.EurekaServerConfig,com.netflix.eureka.resources.ServerCodecs,com.netflix.eureka.registry.AbstractInstanceRegistry)	0	[false, false, false]		package	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
704	com.netflix.eureka.registry.ResponseCacheImpl$3	onRemoval(com.google.common.cache.RemovalNotification)	705	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
706	com.netflix.eureka.registry.ResponseCacheImpl$2	load(com.netflix.eureka.registry.Key)	147	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
707	com.netflix.eureka.registry.ResponseCacheImpl	getCacheUpdateTask()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
708	com.netflix.eureka.registry.ResponseCacheImpl$4	run()	167	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
709	com.netflix.eureka.registry.ResponseCacheImpl	get(com.netflix.eureka.registry.Key)	183	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
710	com.netflix.eureka.registry.ResponseCacheImpl	get(com.netflix.eureka.registry.Key,boolean)	0	[false, false]	com.google.common.annotations.VisibleForTesting	package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
711	com.netflix.eureka.registry.ResponseCacheImpl	getGZIP(com.netflix.eureka.registry.Key)	184	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
712	com.netflix.eureka.registry.ResponseCacheImpl	stop()	185	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
713	com.netflix.eureka.registry.ResponseCacheImpl	invalidate(java.lang.String,java.lang.String,java.lang.String)	180	[false, true, true]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
714	com.netflix.eureka.registry.ResponseCacheImpl	invalidate(com.netflix.eureka.registry.Key[])	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
715	com.netflix.eureka.registry.ResponseCacheImpl	getVersionDelta()	181	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
716	com.netflix.eureka.registry.ResponseCacheImpl	getVersionDeltaWithRegions()	182	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
717	com.netflix.eureka.registry.ResponseCacheImpl	getVersionDeltaStatic()	0	[]	java.lang.Deprecated	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
718	com.netflix.eureka.registry.ResponseCacheImpl	getVersionDeltaWithRegionsLegacy()	0	[]	java.lang.Deprecated	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
719	com.netflix.eureka.registry.ResponseCacheImpl	getCurrentSize()	0	[]	com.netflix.servo.annotations.Monitor	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
720	com.netflix.eureka.registry.ResponseCacheImpl	getValue(com.netflix.eureka.registry.Key,boolean)	0	[false, false]	com.google.common.annotations.VisibleForTesting	package	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
721	com.netflix.eureka.registry.ResponseCacheImpl	getPayLoad(com.netflix.eureka.registry.Key,com.netflix.discovery.shared.Applications)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
722	com.netflix.eureka.registry.ResponseCacheImpl	getPayLoad(com.netflix.eureka.registry.Key,com.netflix.discovery.shared.Application)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
723	com.netflix.eureka.registry.ResponseCacheImpl	generatePayload(com.netflix.eureka.registry.Key)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
724	com.netflix.eureka.registry.ResponseCacheImpl	getApplicationsForVip(com.netflix.eureka.registry.Key,com.netflix.eureka.registry.AbstractInstanceRegistry)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
725	com.netflix.eureka.registry.ResponseCacheImpl$Value	Value(java.lang.String)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
726	com.netflix.eureka.registry.ResponseCacheImpl$Value	getPayload()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
727	com.netflix.eureka.registry.ResponseCacheImpl$Value	getGzipped()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/registry/ResponseCacheImpl.java
728	com.netflix.eureka.aws.Route53Binder	Route53Binder(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.appinfo.ApplicationInfoManager)	0	[false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
729	com.netflix.eureka.aws.Route53Binder	Route53Binder(java.lang.String,com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.appinfo.ApplicationInfoManager)	0	[false, false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
730	com.netflix.eureka.aws.Route53Binder	getRegistrationHostnameFromAmazonDataCenterInfo(com.netflix.appinfo.ApplicationInfoManager)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
731	com.netflix.eureka.aws.Route53Binder	start()	498	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
732	com.netflix.eureka.aws.Route53Binder$1	run()	167	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
733	com.netflix.eureka.aws.Route53Binder	doBind()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
734	com.netflix.eureka.aws.Route53Binder	createResourceRecordSet(com.netflix.eureka.aws.Route53Binder.ResourceRecordSetWithHostedZone)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
735	com.netflix.eureka.aws.Route53Binder	toDomains(java.util.List)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
736	com.netflix.eureka.aws.Route53Binder	getMyZone()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
737	com.netflix.eureka.aws.Route53Binder	getDeclaredDomains()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
738	com.netflix.eureka.aws.Route53Binder	executeChangeWithRetry(com.amazonaws.services.route53.model.Change,com.amazonaws.services.route53.model.HostedZone)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
739	com.netflix.eureka.aws.Route53Binder	executeChange(com.amazonaws.services.route53.model.Change,com.amazonaws.services.route53.model.HostedZone)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
740	com.netflix.eureka.aws.Route53Binder	getResourceRecordSetWithHostedZone(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
741	com.netflix.eureka.aws.Route53Binder	getResourceRecordSet(java.lang.String,com.amazonaws.services.route53.model.HostedZone)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
742	com.netflix.eureka.aws.Route53Binder	getHostedZone(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
743	com.netflix.eureka.aws.Route53Binder	unbindFromDomain(java.lang.String)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
744	com.netflix.eureka.aws.Route53Binder	extractDomain(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
745	com.netflix.eureka.aws.Route53Binder	shutdown()	499	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
746	com.netflix.eureka.aws.Route53Binder	getAmazonRoute53Client(com.netflix.eureka.EurekaServerConfig)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
747	com.netflix.eureka.aws.Route53Binder	hasValue(com.netflix.eureka.aws.Route53Binder.ResourceRecordSetWithHostedZone,java.lang.String)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
748	com.netflix.eureka.aws.Route53Binder$ResourceRecordSetWithHostedZone	ResourceRecordSetWithHostedZone(com.amazonaws.services.route53.model.HostedZone,com.amazonaws.services.route53.model.ResourceRecordSet)	0	[false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
749	com.netflix.eureka.aws.Route53Binder$ResourceRecordSetWithHostedZone	getHostedZone()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
750	com.netflix.eureka.aws.Route53Binder$ResourceRecordSetWithHostedZone	getResourceRecordSet()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/Route53Binder.java
751	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	ElasticNetworkInterfaceBinder(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.registry.PeerAwareInstanceRegistry,com.netflix.appinfo.ApplicationInfoManager)	0	[false, false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
752	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	start()	498	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
753	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	shutdown()	499	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
754	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	alreadyBound()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
755	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	bind()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
756	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder$1	apply(com.amazonaws.services.ec2.model.NetworkInterface)	757	[false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
758	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	unbind()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
759	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	instanceData(java.lang.String,com.amazonaws.services.ec2.AmazonEC2)	0	[false, false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
760	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	getCandidateIps()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
761	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	getIPsForZoneFromConfig(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
762	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	getIPsForZoneFromDNS(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
763	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder	getEC2Service()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
764	com.netflix.eureka.aws.ElasticNetworkInterfaceBinder$IPBindingTask	run()	167	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/ElasticNetworkInterfaceBinder.java
765	com.netflix.eureka.aws.AwsBinderDelegate	AwsBinderDelegate(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.registry.PeerAwareInstanceRegistry,com.netflix.appinfo.ApplicationInfoManager)	0	[false, false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsBinderDelegate.java
766	com.netflix.eureka.aws.AwsBinderDelegate	start()	498	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsBinderDelegate.java
767	com.netflix.eureka.aws.AwsBinderDelegate	shutdown()	499	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/AwsBinderDelegate.java
768	com.netflix.eureka.aws.EIPManager	EIPManager(com.netflix.eureka.EurekaServerConfig,com.netflix.discovery.EurekaClientConfig,com.netflix.eureka.registry.PeerAwareInstanceRegistry,com.netflix.appinfo.ApplicationInfoManager)	0	[false, false, false, false]	javax.inject.Inject	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
769	com.netflix.eureka.aws.EIPManager	start()	498	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
770	com.netflix.eureka.aws.EIPManager	shutdown()	499	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
771	com.netflix.eureka.aws.EIPManager	handleEIPBinding()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
772	com.netflix.eureka.aws.EIPManager	isEIPBound()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
773	com.netflix.eureka.aws.EIPManager	bindEIP()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
774	com.netflix.eureka.aws.EIPManager	unbindEIP()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
775	com.netflix.eureka.aws.EIPManager	getCandidateEIPs(java.lang.String,java.lang.String)	0	[false, false]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
776	com.netflix.eureka.aws.EIPManager	getEIPsForZoneFromConfig(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
777	com.netflix.eureka.aws.EIPManager	getEIPsFromServiceUrls(java.util.List)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
778	com.netflix.eureka.aws.EIPManager	getEIPsForZoneFromDNS(java.lang.String)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
779	com.netflix.eureka.aws.EIPManager	getEC2Service()	0	[]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
780	com.netflix.eureka.aws.EIPManager$EIPBindingTask	run()	167	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/aws/EIPManager.java
781	com.netflix.eureka.DefaultEurekaServerConfig	DefaultEurekaServerConfig()	0	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
782	com.netflix.eureka.DefaultEurekaServerConfig	DefaultEurekaServerConfig(java.lang.String)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
783	com.netflix.eureka.DefaultEurekaServerConfig	init()	0	[]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
784	com.netflix.eureka.DefaultEurekaServerConfig	getAWSAccessId()	9	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
785	com.netflix.eureka.DefaultEurekaServerConfig	getAWSSecretKey()	10	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
786	com.netflix.eureka.DefaultEurekaServerConfig	getEIPBindRebindRetries()	11	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
787	com.netflix.eureka.DefaultEurekaServerConfig	getEIPBindingRetryIntervalMsWhenUnbound()	12	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
788	com.netflix.eureka.DefaultEurekaServerConfig	getEIPBindingRetryIntervalMs()	13	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
789	com.netflix.eureka.DefaultEurekaServerConfig	shouldEnableSelfPreservation()	14	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
790	com.netflix.eureka.DefaultEurekaServerConfig	getPeerEurekaNodesUpdateIntervalMs()	18	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
791	com.netflix.eureka.DefaultEurekaServerConfig	getRenewalThresholdUpdateIntervalMs()	16	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
792	com.netflix.eureka.DefaultEurekaServerConfig	getExpectedClientRenewalIntervalSeconds()	17	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
793	com.netflix.eureka.DefaultEurekaServerConfig	getRenewalPercentThreshold()	15	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
794	com.netflix.eureka.DefaultEurekaServerConfig	shouldEnableReplicatedRequestCompression()	19	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
795	com.netflix.eureka.DefaultEurekaServerConfig	getNumberOfReplicationRetries()	20	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
796	com.netflix.eureka.DefaultEurekaServerConfig	getPeerEurekaStatusRefreshTimeIntervalMs()	21	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
797	com.netflix.eureka.DefaultEurekaServerConfig	getWaitTimeInMsWhenSyncEmpty()	22	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
798	com.netflix.eureka.DefaultEurekaServerConfig	getPeerNodeConnectTimeoutMs()	23	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
799	com.netflix.eureka.DefaultEurekaServerConfig	getPeerNodeReadTimeoutMs()	24	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
800	com.netflix.eureka.DefaultEurekaServerConfig	getPeerNodeTotalConnections()	25	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
801	com.netflix.eureka.DefaultEurekaServerConfig	getPeerNodeTotalConnectionsPerHost()	26	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
802	com.netflix.eureka.DefaultEurekaServerConfig	getPeerNodeConnectionIdleTimeoutSeconds()	27	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
803	com.netflix.eureka.DefaultEurekaServerConfig	getRetentionTimeInMSInDeltaQueue()	28	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
804	com.netflix.eureka.DefaultEurekaServerConfig	getDeltaRetentionTimerIntervalInMs()	29	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
805	com.netflix.eureka.DefaultEurekaServerConfig	getEvictionIntervalTimerInMs()	30	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
806	com.netflix.eureka.DefaultEurekaServerConfig	shouldUseAwsAsgApi()	31	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
807	com.netflix.eureka.DefaultEurekaServerConfig	getASGQueryTimeoutMs()	32	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
808	com.netflix.eureka.DefaultEurekaServerConfig	getASGUpdateIntervalMs()	33	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
809	com.netflix.eureka.DefaultEurekaServerConfig	getASGCacheExpiryTimeoutMs()	34	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
810	com.netflix.eureka.DefaultEurekaServerConfig	getResponseCacheAutoExpirationInSeconds()	35	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
811	com.netflix.eureka.DefaultEurekaServerConfig	getResponseCacheUpdateIntervalMs()	36	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
812	com.netflix.eureka.DefaultEurekaServerConfig	shouldUseReadOnlyResponseCache()	37	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
813	com.netflix.eureka.DefaultEurekaServerConfig	shouldDisableDelta()	38	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
814	com.netflix.eureka.DefaultEurekaServerConfig	getMaxIdleThreadInMinutesAgeForStatusReplication()	39	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
815	com.netflix.eureka.DefaultEurekaServerConfig	getMinThreadsForStatusReplication()	40	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
816	com.netflix.eureka.DefaultEurekaServerConfig	getMaxThreadsForStatusReplication()	41	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
817	com.netflix.eureka.DefaultEurekaServerConfig	getMaxElementsInStatusReplicationPool()	42	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
818	com.netflix.eureka.DefaultEurekaServerConfig	shouldSyncWhenTimestampDiffers()	43	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
819	com.netflix.eureka.DefaultEurekaServerConfig	getRegistrySyncRetries()	44	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
820	com.netflix.eureka.DefaultEurekaServerConfig	getRegistrySyncRetryWaitMs()	45	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
821	com.netflix.eureka.DefaultEurekaServerConfig	getMaxElementsInPeerReplicationPool()	46	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
822	com.netflix.eureka.DefaultEurekaServerConfig	getMaxIdleThreadAgeInMinutesForPeerReplication()	47	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
823	com.netflix.eureka.DefaultEurekaServerConfig	getMinThreadsForPeerReplication()	48	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
824	com.netflix.eureka.DefaultEurekaServerConfig	getMaxThreadsForPeerReplication()	49	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
825	com.netflix.eureka.DefaultEurekaServerConfig	getMaxTimeForReplication()	51	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
826	com.netflix.eureka.DefaultEurekaServerConfig	shouldPrimeAwsReplicaConnections()	52	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
827	com.netflix.eureka.DefaultEurekaServerConfig	shouldDisableDeltaForRemoteRegions()	53	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
828	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionConnectTimeoutMs()	54	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
829	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionReadTimeoutMs()	55	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
830	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionTotalConnections()	56	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
831	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionTotalConnectionsPerHost()	57	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
832	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionConnectionIdleTimeoutSeconds()	58	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
833	com.netflix.eureka.DefaultEurekaServerConfig	shouldGZipContentFromRemoteRegion()	59	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
834	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionUrlsWithName()	60	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
835	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionUrls()	61	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
836	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionAppWhitelist(java.lang.String)	62	[true]	javax.annotation.Nullable,java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
837	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionRegistryFetchInterval()	63	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
838	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionFetchThreadPoolSize()	64	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
839	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionTrustStore()	65	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
840	com.netflix.eureka.DefaultEurekaServerConfig	getRemoteRegionTrustStorePassword()	66	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
841	com.netflix.eureka.DefaultEurekaServerConfig	disableTransparentFallbackToOtherRegion()	67	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
842	com.netflix.eureka.DefaultEurekaServerConfig	shouldBatchReplication()	68	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
843	com.netflix.eureka.DefaultEurekaServerConfig	getMyUrl()	69	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
844	com.netflix.eureka.DefaultEurekaServerConfig	shouldLogIdentityHeaders()	70	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
845	com.netflix.eureka.DefaultEurekaServerConfig	getJsonCodecName()	78	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
846	com.netflix.eureka.DefaultEurekaServerConfig	getXmlCodecName()	79	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
847	com.netflix.eureka.DefaultEurekaServerConfig	isRateLimiterEnabled()	71	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
848	com.netflix.eureka.DefaultEurekaServerConfig	isRateLimiterThrottleStandardClients()	72	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
849	com.netflix.eureka.DefaultEurekaServerConfig	getRateLimiterPrivilegedClients()	73	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
850	com.netflix.eureka.DefaultEurekaServerConfig	getRateLimiterBurstSize()	74	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
851	com.netflix.eureka.DefaultEurekaServerConfig	getRateLimiterRegistryFetchAverageRate()	75	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
852	com.netflix.eureka.DefaultEurekaServerConfig	getRateLimiterFullFetchAverageRate()	76	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
853	com.netflix.eureka.DefaultEurekaServerConfig	getListAutoScalingGroupsRoleName()	77	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
854	com.netflix.eureka.DefaultEurekaServerConfig	getRoute53BindRebindRetries()	82	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
855	com.netflix.eureka.DefaultEurekaServerConfig	getRoute53BindingRetryIntervalMs()	83	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
856	com.netflix.eureka.DefaultEurekaServerConfig	getRoute53DomainTTL()	81	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
857	com.netflix.eureka.DefaultEurekaServerConfig	getBindingStrategy()	80	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
858	com.netflix.eureka.DefaultEurekaServerConfig	getExperimental(java.lang.String)	84	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
859	com.netflix.eureka.DefaultEurekaServerConfig	getHealthStatusMinNumberOfAvailablePeers()	50	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
860	com.netflix.eureka.DefaultEurekaServerConfig	getInitialCapacityOfResponseCache()	85	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/DefaultEurekaServerConfig.java
861	com.netflix.eureka.V1AwareInstanceInfoConverter	getStatus(com.netflix.appinfo.InstanceInfo)	862	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/V1AwareInstanceInfoConverter.java
863	com.netflix.eureka.GzipEncodingEnforcingFilter	init(javax.servlet.FilterConfig)	441	[false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
864	com.netflix.eureka.GzipEncodingEnforcingFilter	doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)	443	[false, false, false]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
865	com.netflix.eureka.GzipEncodingEnforcingFilter	destroy()	450	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
866	com.netflix.eureka.GzipEncodingEnforcingFilter	addGzipAcceptEncoding(javax.servlet.http.HttpServletRequest)	0	[false]		private	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
867	com.netflix.eureka.GzipEncodingEnforcingFilter$1	getHeaders(java.lang.String)	868	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
869	com.netflix.eureka.GzipEncodingEnforcingFilter$1	getHeaderNames()	870	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
871	com.netflix.eureka.GzipEncodingEnforcingFilter$1	getHeader(java.lang.String)	872	[false]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
873	com.netflix.eureka.GzipEncodingEnforcingFilter$EnumWrapper	EnumWrapper(E)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
874	com.netflix.eureka.GzipEncodingEnforcingFilter$EnumWrapper	EnumWrapper(java.util.Enumeration,E)	0	[false, false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
875	com.netflix.eureka.GzipEncodingEnforcingFilter$EnumWrapper	hasMoreElements()	876	[]	java.lang.Override	public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
877	com.netflix.eureka.GzipEncodingEnforcingFilter$EnumWrapper	nextElement()	878	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/GzipEncodingEnforcingFilter.java
879	com.netflix.eureka.EurekaServerContextHolder	EurekaServerContextHolder(com.netflix.eureka.EurekaServerContext)	0	[false]		private	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContextHolder.java
880	com.netflix.eureka.EurekaServerContextHolder	getServerContext()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContextHolder.java
881	com.netflix.eureka.EurekaServerContextHolder	initialize(com.netflix.eureka.EurekaServerContext)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContextHolder.java
882	com.netflix.eureka.EurekaServerContextHolder	getInstance()	0	[]		public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerContextHolder.java
883	com.netflix.eureka.StatusFilter	destroy()	450	[]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/StatusFilter.java
884	com.netflix.eureka.StatusFilter	doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)	443	[false, false, false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/StatusFilter.java
885	com.netflix.eureka.StatusFilter	init(javax.servlet.FilterConfig)	441	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/StatusFilter.java
886	com.netflix.eureka.EurekaServerIdentity	EurekaServerIdentity(java.lang.String)	0	[false]		public	false	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerIdentity.java
887	com.netflix.eureka.EurekaServerIdentity	getName()	888	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerIdentity.java
889	com.netflix.eureka.EurekaServerIdentity	getVersion()	890	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerIdentity.java
891	com.netflix.eureka.EurekaServerIdentity	getId()	892	[]	java.lang.Override	public	true	/Users/nima/Desktop/eureka/eureka-core/src/main/java/com/netflix/eureka/EurekaServerIdentity.java
